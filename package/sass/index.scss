@import './variables/index.scss';

@import './color.scss';
@import './container.scss';
@import './space.scss';
@import './text.scss';

//定位
@each $var in (absolute, relative, fixed, static, inherit) {
    .p-#{$var} {
        position: $var;
    }
}
//弹性布局主轴方向对齐方式
$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around
);

//弹性布局交叉轴方向对齐方式
$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch
);

//弹性布局方向
$flex-dir: (
    row: row,
    col: column,
    rowRe: row-reverse,
    colRe: column-reverse
);

//弹性布局方向
@each $key, $value in $flex-dir {
    .flex-dir-#{$key} {
        flex-direction: $value;
    }
}

//弹性布局主轴方向对齐方式
@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

//弹性布局交叉轴方向对齐方式
@each $key, $value in $flex-ai {
    .ai-#{$key} {
        align-items: $value;
    }
}

//长宽百分比 .h-100 height:100%
$side-types: (
    w: width,
    h: height
); //宽度，长度
$side-base-size: 1%;
@each $typeKey, $type in $side-types {
    @each $size in (100, 50, 33, 25) {
        .#{$typeKey}-#{$size} {
            #{$type}: $size * $side-base-size;
        }
    }
}

//弹性布局换行
.flex-wrap {
    flex-wrap: wrap;
}

.flex-1 {
    flex: 1;
}
.flex-2 {
    flex: 2;
}
.fw-bold {
    font-weight: bold;
}
//文本不换行
.text-nowrap {
    white-space: nowrap;
}
//文本超出显示省略号
.text-ellipsis {
    white-space: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;
}
